resultsdict = Dict()
resultsdict[ "θsolcler" ] = [1.2216062536074848, 0.36986526572323664, 0.8114008644814672, 0.8256059861239026, 0.37097308759068]
resultsdict[ "βsolcler" ] = [-6.966845052128352, 1.5344657270050077, 0.8757295537450648]
resultsdict[ "δsolcler" ] = [-3.870081314253066, -2.4566057401831873, -3.4129062232567198, -2.9829004514844044, -4.7462527791252604, -2.4149132101211124, -4.648251363630721, -2.272528515327236, -6.031793879112578, -3.110336708863073, -2.229138653209954, -3.798014225447354, -5.977005463713155, -3.880155584181251, -2.993377084476199, -6.703006828968689, -5.489626263694149, -3.5383337293050947, -4.363995208797874, -5.030815936397498, -4.116685540874672, -3.9004574054074266, -3.6008300793271104, -4.4109377633112565, -3.709078718472006, -4.953257307270224, -5.464437260337604, -3.936048469058826, -2.9763773264344247, -3.7340863760941705, -5.714872598158563, -2.0143742624945213, -1.6304179496700995, -4.077547071357243, -4.071399530996291, -6.356870850223321, -4.863890430275788, -1.732132233978317, -1.7480084179109678, -3.7704151001295956, -3.7223819977192165, -5.564969907329056, -2.510235945183445, -4.804425700858126, -4.155937969539481, -3.5603905835409986, -5.151572711061247, -5.124169020010257, -0.5397234709065728, -3.2372804492036]
resultsdict[ "θtstatcler" ] = 6.8555288135261625
resultsdict[ "βtstatcler" ] = 13.578840175027363
resultsdict[ "δtstatcler" ] = 145.15776763385702
resultsdict[ "θsolcheap" ] = [1.2215921895443769, 0.3699588862919475, 0.8114863527484408, 0.8257652538558176, 0.370884381545483]
resultsdict[ "βsolcheap" ] = [-6.966850530346088, 1.5344366475118376, 0.8758070335569372]
resultsdict[ "δsolcheap" ] = [-3.869984826039374, -2.456747286601339, -3.412929305729982, -2.9830371882400843, -4.746086535617277, -2.41494716511331, -4.648308892459873, -2.2724915028951993, -6.031508847757027, -3.110240877471198, -2.229354761692232, -3.7980099226981054, -5.977116004294558, -3.880170759354479, -2.9935064922311425, -6.703616472887847, -5.489665416735714, -3.53841398100817, -4.364130844968523, -5.030794310257167, -4.116841632540316, -3.900619363555255, -3.6009084765976196, -4.41091731312193, -3.70913602019299, -4.953221690041023, -5.464275594215901, -3.9362238000701772, -2.976468916496476, -3.734140476133803, -5.714676598018007, -2.014290668177819, -1.6303846494071332, -4.077370377311968, -4.071267969324685, -6.358309403741184, -4.863636942860707, -1.7321692861811655, -1.7480324009811865, -3.770281946117221, -3.722538991664991, -5.565163525182681, -2.5104063319641354, -4.804477725680268, -4.156048501032719, -3.5606553460164108, -5.151740845742854, -5.124408783824508, -0.5397361622149606, -3.2374514489436033]
resultsdict[ "θtstatcheap" ] = 6.846781458489902
resultsdict[ "βtstatcheap" ] = 13.681752754515324
resultsdict[ "δtstatcheap" ] = 145.3018137609441
resultsdict[ "θsolmdle" ] = [1.242442713148273, 0.3328010543606074, 0.783061410655338, 0.7690299315725251, 0.43391660758456013]
resultsdict[ "βsolmdle" ] = [-7.034015351995237, 1.5663867676904335, 0.879403447683265]
resultsdict[ "δsolmdle" ] = [-3.8930108975729194, -2.3955778514743864, -3.3878299200846214, -2.9252724107190087, -4.750221014658993, -2.3912304488647886, -4.65510980859012, -2.2846160992208318, -6.039891561459865, -3.154948258559175, -2.1558935036960656, -3.836230699474497, -6.0133916054065235, -3.8782726691887546, -2.9496523415868228, -6.7938806653148855, -5.50627021652472, -3.507219613800038, -4.344881910831514, -5.033883852025684, -4.054880002365926, -3.8363293287654727, -3.5539037525770962, -4.385294532831697, -3.6692047380441735, -4.955679242353829, -5.45966688412607, -3.872644565584454, -2.925386753364083, -3.6922870774141487, -5.749691196626574, -2.0464584202048517, -1.6488997796026836, -4.097092687807032, -4.09524498654746, -6.458765392736013, -4.879541462961267, -1.7092174530239304, -1.7296574801753728, -3.787879860722146, -3.7322068766054617, -5.698728972397741, -2.4883524871808302, -4.860850386483959, -4.213896541113987, -3.540411620681619, -5.204215606478194, -5.149111056603431, -0.5979419430456073, -3.216307577157336]
resultsdict[ "θtstatmdle" ] = 6.666168859757321
resultsdict[ "βtstatmdle" ] = 13.130159117332365
resultsdict[ "δtstatmdle" ] = 140.53757135908188
resultsdict[ "θsolshareconstraint" ] = [1.2421753978451857, 0.33273469460350813, 0.7829041432788583, 0.7689233526084764, 0.43319586605421034]
resultsdict[ "βsolshareconstraint" ] = [-7.0363957422387635, 1.567136391207722, 0.8799815669511157]
resultsdict[ "δsolshareconstraint" ] = [-3.8876016004739795, -2.3986116297109423, -3.388646747088437, -2.9281959847029317, -4.749030396527335, -2.3920327750922206, -4.653426173217823, -2.2877873220475045, -6.043741967703842, -3.1570331729743693, -2.1595945790991133, -3.835075952129176, -6.005155970207507, -3.881504070853977, -2.950856481032524, -6.81019424161359, -5.508427002346196, -3.505319515856752, -4.351740611171205, -5.03281194452503, -4.052762622029994, -3.837408821600405, -3.5541745943763083, -4.386010458091445, -3.672014293157014, -4.945838223103442, -5.454667224729034, -3.8721195576577023, -2.9264932907024392, -3.694708353993238, -5.753456172866868, -2.0464696799391526, -1.6497083556011016, -4.094749518558495, -4.091926720245348, -6.4922897017273336, -4.882918964528028, -1.7105989418103094, -1.7289345521843145, -3.7822900247032982, -3.7314199907633254, -5.692868557071638, -2.489878122151877, -4.858484173327737, -4.21132287808604, -3.541474191692065, -5.200881925855181, -5.1537265835294255, -0.598031271224533, -3.2174685478855447]


function myprogram( nodes, draws, meth  )
    s = Sources(                                                            
      consumers = "testdata/example_consumers.csv",
      products = "testdata/example_products.csv",
      marketsizes = "testdata/example_marketsizes.csv",
      draws = "testdata/example_draws.csv"  
    )
    v = Variables( 
        interactions =  [                                                   
            :income :constant; 
            :income :ibu; 
            :age :ibu
            ],
        randomcoefficients =  [:ibu; :abv],     
        regressors =  [ :constant; :ibu; :abv ],      
        instruments = [ :constant; :ibu; :abv; :IVgh_ibu; :IVgh_abv ], 
        microinstruments = [                                                
            :income :constant; 
            :income :ibu; 
            :age :ibu
            ],
        outsidegood = "product 11"                                          
    )
    
    e = Estimator( meth )                                                     

    d = Data( e, s, v; replicable = true ) 
    sol = grumps!( e, d )           
    return sol
end

for meth ∈ [ :cler, :cheap, :mdle, :shareconstraint ]
    sol = myprogram( 11, 10_000, "$meth" )
    @test isapprox( getθcoef( sol ), resultsdict[ "θsol$meth"], rtol = 1.0e-2 )
    @test isapprox( getβcoef( sol ), resultsdict[ "βsol$meth"], rtol = 1.0e-2 )
    @test isapprox( getδcoef( sol ), resultsdict[ "δsol$meth"], rtol = 1.0e-2 )
    θ = getθ( sol ) 
    β = getβ( sol )
    δ = getδ( sol )
    if meth ≠ :shareconstraint
        @test isapprox( norm( gettstat.( θ )), resultsdict[ "θtstat$meth"], rtol = 1.0e-2 )
        @test isapprox( norm( gettstat.( β )), resultsdict[ "βtstat$meth"], rtol = 1.0e-2 )
        @test isapprox( norm( gettstat.( δ )), resultsdict[ "δtstat$meth"], rtol = 1.0e-2 )
    end
end


