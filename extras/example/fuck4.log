#=   14.3 ms =# precompile(Tuple{Base.Precompilation.var"##precompilepkgs#9", Bool, Bool, Bool, Bool, Bool, Pair{Base.Cmd, Base.CacheFlags}, Base.TTY, Bool, Bool, Bool, typeof(Base.Precompilation.precompilepkgs), Array{String, 1}})
#=   30.3 ms =# precompile(Tuple{typeof(Base.getindex), Base.Dict{Base.PkgId, Base.Set{Base.PkgId}}, Base.PkgId})
#=    7.3 ms =# precompile(Tuple{typeof(Base.issubset), Array{Base.PkgId, 1}, Base.Set{Base.PkgId}})
#=    4.4 ms =# precompile(Tuple{Base.Precompilation.var"#collect_all_deps#_precompilepkgs##18", Base.Dict{Base.PkgId, Array{Base.PkgId, 1}}, Base.PkgId})
#=   11.3 ms =# precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Memory{UInt8}}}, Base.UUID})
#=    7.7 ms =# precompile(Tuple{typeof(Base.vect), Array{String, 1}, Vararg{Array{String, 1}}})
#=    5.7 ms =# precompile(Tuple{typeof(Base.iterate), Array{Array{String, 1}, 1}})
#=    3.2 ms =# precompile(Tuple{typeof(Base.vect), Array{String, 1}, Vararg{Any}})
#=    6.7 ms =# precompile(Tuple{typeof(Base.getindex), Type{Union{Nothing, Array{String, 1}}}, Array{String, 1}, Nothing})
#=    3.4 ms =# precompile(Tuple{typeof(Base.iterate), Array{Union{Nothing, Array{String, 1}}, 1}})
#=    2.9 ms =# precompile(Tuple{typeof(Base.vect), Base.Dict{String, Any}, Vararg{Any}})
#=    6.9 ms =# precompile(Tuple{typeof(Base.getindex), Type{Union{Nothing, Base.Dict{String, Any}}}, Base.Dict{String, Any}, Nothing})
#=    3.3 ms =# precompile(Tuple{typeof(Base.iterate), Array{Union{Nothing, Base.Dict{String, Any}}, 1}})
#=    4.4 ms =# precompile(Tuple{typeof(Base.lock), Base.TTY})
#=    4.3 ms =# precompile(Tuple{typeof(Base.unlock), Base.TTY})
#=  101.5 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.Precompilation.printpkgstyle), Base.IOContext{IO}, Symbol, String})
#=   20.2 ms =# precompile(Tuple{Core.GeneratedFunctionStub, UInt64, Method, Any, Vararg{Any}}) # recompile
#=   12.4 ms =# precompile(Tuple{Base.var"##s178#177", Vararg{Any, 4}}) # recompile
#=   57.6 ms =# precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Base.Val{Artifacts}})
#=    0.0 ms =# precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
#=    3.5 ms =# precompile(Tuple{Base.Returns{Base.SubString{String}}, Any})
#=    2.5 ms =# precompile(Tuple{Base.var"##_#52", Base.Pairs{Symbol, V, Tuple{Vararg{Symbol, N}}, NamedTuple{names, T}} where T<:Tuple{Vararg{Any, N}} where names where N where V, Base.Returns{Base.SubString{String}}, Any})
#=  513.1 ms =# precompile(Tuple{typeof(TimeZones.__init__)}) # recompile
#=   37.1 ms =# precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Base.Val{Artifacts}}) # recompile
#=   37.0 ms =# precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Base.Val{Artifacts}}) # recompile
#=    8.7 ms =# precompile(Tuple{typeof(Base.issorted), Array{String, 1}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
#=    4.9 ms =# precompile(Tuple{Type{Base.VersionNumber}, Int32, Int32, Int32})
#=   36.8 ms =# precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Base.Val{Artifacts}}) # recompile
#=   38.5 ms =# precompile(Tuple{typeof(CPUSummary.__init__)}) # recompile
#=    6.0 ms =# precompile(Tuple{CpuId.var"#cacheinclusive_level#cacheinclusive##0", UInt32, UInt32})
#=    5.2 ms =# precompile(Tuple{Type{Pair{A, B} where B where A}, String, Function})
#=    3.9 ms =# precompile(Tuple{Type{Pair{A, B} where B where A}, Char, Function})
#=    4.4 ms =# precompile(Tuple{Type{REPL.LineEdit.KeyAlias}, Any}) # recompile
#=    2.6 ms =# precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, REPL.LineEdit.KeyAlias})
#=    3.5 ms =# precompile(Tuple{Type{NamedTuple{(:override,), T} where T<:Tuple}, Tuple{Bool}})
#=    3.6 ms =# precompile(Tuple{Type{Base.KeyError}, Char})
#=  336.6 ms =# precompile(Tuple{typeof(REPLExt.__init__)}) # recompile
#=    3.4 ms =# precompile(Tuple{Type{NamedTuple{(:pass_empty, :suppress_on_semicolon), T} where T<:Tuple}, Tuple{Bool, Bool}})
#=   75.8 ms =# precompile(Tuple{typeof(OhMyREPL.__init__)}) # recompile
#=    4.7 ms =# precompile(Tuple{typeof(Base.mod), Int64, Int64})
#=    3.6 ms =# precompile(Tuple{Type{NamedTuple{(:bold, :color), T} where T<:Tuple}, Tuple{Bool, Symbol}})
#=    2.6 ms =# precompile(Tuple{Type{NamedTuple{(:color, :bold), T} where T<:Tuple}, Tuple{Int64, Bool}})
#=  202.9 ms =# precompile(Tuple{typeof(Grumps.__init__)}) # recompile
#=    2.2 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, String})
#=    2.7 ms =# precompile(Tuple{typeof(Base.getproperty), Base.GenericCondition{Base.ReentrantLock}, Symbol})
#=    9.9 ms =# precompile(Tuple{Distributed.var"#start_gc_msgs_task##0#start_gc_msgs_task##1"})
#=    3.0 ms =# precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:bold, :italic, :underline, :blink, :reverse, :hidden, :color), Tuple{Bool, Bool, Bool, Bool, Bool, Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, String})
#=  125.8 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:bold, :italic, :underline, :blink, :reverse, :hidden, :color), Tuple{Bool, Bool, Bool, Bool, Bool, Bool, Int64}}, typeof(Base.printstyled), Base.TTY, String})
#=    3.2 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:bold, :italic, :underline, :blink, :reverse, :hidden, :color), Tuple{Bool, Bool, Bool, Bool, Bool, Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, Char})
#=    1.9 ms =# precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Memory{UInt8}}}, Char})
#=    3.5 ms =# precompile(Tuple{Type{NamedTuple{(:consumers, :products, :marketsizes, :draws), T} where T<:Tuple}, NTuple{4, String}})
#=    2.9 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:consumers, :products, :marketsizes, :draws), NTuple{4, String}}, Type{Grumps.Sources{T} where T}})
#=    2.7 ms =# precompile(Tuple{Grumps.var"##Sources#28", String, String, String, String, Type{Grumps.Sources{T} where T}})
#=    2.6 ms =# precompile(Tuple{Type{Grumps.Sources{T} where T}, Vararg{String, 4}})
#=    2.2 ms =# precompile(Tuple{Type{Grumps.SourceFileCSV}, String, String})
#=    2.8 ms =# precompile(Tuple{Type{Grumps.Sources{T} where T}, Grumps.SourceFileCSV, String, String, String})
#=    2.8 ms =# precompile(Tuple{Type{Grumps.Sources{T} where T}, Grumps.SourceFileCSV, Grumps.SourceFileCSV, String, String})
#=    2.9 ms =# precompile(Tuple{Type{Grumps.Sources{T} where T}, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, String})
#=    2.8 ms =# precompile(Tuple{Type{Grumps.Sources{T} where T}, Vararg{Grumps.SourceFileCSV, 4}})
#=    2.8 ms =# precompile(Tuple{Type{Grumps.GrumpsSources{Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV}}, Vararg{Grumps.SourceFileCSV, 4}})
#=    2.4 ms =# precompile(Tuple{Base.BottomRF{typeof(Base.max)}, Base._InitialValue, Int64})
#=    3.3 ms =# precompile(Tuple{typeof(Base.:(>)), Int64})
#=    4.7 ms =# precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{Base.var"#_typed_hvncat##20#_typed_hvncat##21", Base.BottomRF{typeof(Base.max)}}, Symbol})
#=    6.6 ms =# precompile(Tuple{typeof(Base.rows_to_dimshape), Tuple{Int64, Int64, Int64}})
#=    2.8 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#_typed_hvncat##16#_typed_hvncat##17", NTuple{6, Symbol}})
#=    4.0 ms =# precompile(Tuple{typeof(Base.all), Function, Tuple{Int64, Int64}})
#=    3.4 ms =# precompile(Tuple{typeof(Base._all), Base.Fix{2, typeof(Base.:(>)), Int64}, Tuple{Int64, Int64}, Base.Colon})
#=    5.3 ms =# precompile(Tuple{typeof(Base.findfirst), Function, Tuple{Int64, Int64}})
#=    2.1 ms =# precompile(Tuple{Base.Fix{2, typeof(Base.:(>)), Int64}, Int64})
#=    2.9 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(+)), Int64, Base.UnitRange{Int64}})
#=    1.9 ms =# precompile(Tuple{typeof(Base.Broadcast.materialize), Base.UnitRange{Int64}})
#=    4.4 ms =# precompile(Tuple{typeof(Core.checked_dims), Int64, Int64, Vararg{Int64}})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), StringDistances.Normalized{StringDistances.Levenshtein}, Symbol})
#=    4.5 ms =# precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{Base.var"#_findmax##0#_findmax##1"{typeof(Base.identity)}, Base.BottomRF{typeof(Base._rf_findmax)}}, Symbol})
#=    2.4 ms =# precompile(Tuple{typeof(Base.getproperty), Base.BottomRF{typeof(Base._rf_findmax)}, Symbol})
#=    3.4 ms =# precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float64}, Int64})
#=    3.3 ms =# precompile(Tuple{Type{NamedTuple{(:seed,), T} where T<:Tuple}, Tuple{Int64}})
#=    3.9 ms =# precompile(Tuple{typeof(Base.cconvert), Type, Int8})
#=    1.9 ms =# precompile(Tuple{typeof(Base.unsafe_convert), Type{Int8}, Int8})
#=    3.2 ms =# precompile(Tuple{typeof(Base.float), Float64})
#=    4.6 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Int64}, Int64})
#=    3.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Int64}, Int64, Int64})
#=    4.4 ms =# precompile(Tuple{typeof(Base.getproperty), Printf.Spec{Base.Val{Char(0x73000000)}}, Symbol})
#=    3.6 ms =# precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Int64}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.isnothing), Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Float64, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##0#Newter_SolveSubproblem!##1"}}}, Symbol})
#=    2.7 ms =# precompile(Tuple{typeof(Base.:(∘)), Transducers.Enumerate{Int64}, Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##0#Newter_SolveSubproblem!##1"}})
#=    3.2 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##0#Newter_SolveSubproblem!##1"}, Symbol})
#=    2.7 ms =# precompile(Tuple{typeof(Base.sum), Tuple{Int64}})
#=   18.2 ms =# precompile(Tuple{Core.GeneratedFunctionStub, UInt64, Method, Any, Vararg{Any}}) # recompile
#=   26.4 ms =# precompile(Tuple{typeof(Base.Compiler.instanceof_tfunc), Any, Bool, Core.PartialStruct})
#=   13.1 ms =# precompile(Tuple{Transducers.AutoObjectsReStacker.var"##s1#1", Any, Any})
#=    4.0 ms =# precompile(Tuple{ConstructionBase.var"##s27#1", Any, Any, Any})
#=    3.1 ms =# precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Char, Base.Val{4}})
#=    2.1 ms =# precompile(Tuple{typeof(Base.:(^)), Char, Int64})
#=    2.0 ms =# precompile(Tuple{typeof(Base.repeat), Char, Int64})
#=    2.1 ms =# precompile(Tuple{typeof(Base.:(|)), UInt32, UInt8})
#=    2.0 ms =# precompile(Tuple{typeof(Base.leading_zeros), UInt32})
#=    2.0 ms =# precompile(Tuple{typeof(Base.:(*)), Int64, UInt64})
#=    3.4 ms =# precompile(Tuple{Type{NamedTuple{(:context,), T} where T<:Tuple}, Tuple{Pair{Symbol, Module}}})
#=    3.1 ms =# precompile(Tuple{typeof(Base.first), Tuple{Bool, Nothing}})
#=    2.8 ms =# precompile(Tuple{typeof(Transducers.asfoldable), Transducers.TransducerFolder})
#=    2.6 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.TransducerFolder, Symbol})
#=    4.0 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##0#Newter_SolveSubproblem!##1"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##0#Newter_SolveSubproblem!##1"}}}}, Int64, Int64})
#=    4.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.NoopDACContext, Transducers.NoopDACContext}, Int64})
#=    2.9 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.NoopDACContext, Transducers.NoopDACContext}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{Base.var"#reverse##0#reverse##1"{Tuple{Accessors.PropertyLens{:reducible}}}, Int64})
#=   22.8 ms =# precompile(Tuple{Base.Compiler.var"#inferiterate#abstract_iteration##0"{Type{Base.Generator{I, typeof(Base.eltype)} where I<:Tuple}, Base.Compiler.Future{Base.Compiler.CallMeta}, Base.Compiler.Future{Base.Compiler.AbstractIterationResult}}, Base.Compiler.NativeInterpreter, Base.Compiler.InferenceState})
#=   87.4 ms =# precompile(Tuple{Base.Compiler.var"#inferiterate_2arg#abstract_iteration##1"{Base.Compiler.InferenceLattice{Base.Compiler.ConditionalsLattice{Base.Compiler.PartialsLattice{Base.Compiler.ConstsLattice}}}, Array{Any, 1}, Array{Base.Compiler.CallMeta, 1}, Type{Base.Generator{I, typeof(Base.eltype)} where I<:Tuple}, Base.Compiler.Future{Base.Compiler.AbstractIterationResult}}, Base.Compiler.NativeInterpreter, Base.Compiler.InferenceState})
#=    3.5 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##8#Newter_SolveSubproblem!##9"}}}, Symbol})
#=    3.7 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##8#Newter_SolveSubproblem!##9"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##8#Newter_SolveSubproblem!##9"}}}}, Int64, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##10#Newter_SolveSubproblem!##11"}}}, Symbol})
#=    3.6 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##10#Newter_SolveSubproblem!##11"}}}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##10#Newter_SolveSubproblem!##11"}}}}, Int64, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.MapSplat{Grumps.var"#DetermineDirection!##2#DetermineDirection!##3"}, Symbol})
#=    4.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}, Bool}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}, Bool}, Int64, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#DetermineDirection!##2#DetermineDirection!##3"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#DetermineDirection!##2#DetermineDirection!##3"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64, Int64})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#DetermineDirection!##2#DetermineDirection!##3"}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#DetermineDirection!##2#DetermineDirection!##3"}}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.MapSplat{Grumps.var"#DetermineDirection!##4#DetermineDirection!##5"}, Symbol})
#=    3.9 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#DetermineDirection!##4#DetermineDirection!##5"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#DetermineDirection!##4#DetermineDirection!##5"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64, Int64})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#DetermineDirection!##4#DetermineDirection!##5"}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#DetermineDirection!##4#DetermineDirection!##5"}}, Int64, Int64})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, NTuple{4, Base.Missing}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, NTuple{4, Base.Missing}}, Int64, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, NTuple{5, Base.Missing}}, Int64})
#=    3.0 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, NTuple{5, Base.Missing}}, Int64, Int64})
#=    3.5 ms =# precompile(Tuple{Base.Iterators.var"#IteratorSize##0#IteratorSize##1"{Tuple{Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}}}, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.MapSplat{Grumps.var"#Computem##0#Computem##1"}, Symbol})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#Computem##0#Computem##1"}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#Computem##0#Computem##1"}}, Int64, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#NewterInitialSafeguards##0#NewterInitialSafeguards##1"}}}, Symbol})
#=    2.6 ms =# precompile(Tuple{typeof(Base.:(∘)), Transducers.Enumerate{Int64}, Transducers.Map{Grumps.var"#NewterInitialSafeguards##0#NewterInitialSafeguards##1"}})
#=    2.8 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Grumps.var"#NewterInitialSafeguards##0#NewterInitialSafeguards##1"}, Symbol})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#NewterInitialSafeguards##0#NewterInitialSafeguards##1"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#NewterInitialSafeguards##0#NewterInitialSafeguards##1"}}}}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{Base.Iterators.var"#IteratorSize##0#IteratorSize##1"{Tuple{Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}}}, Int64})
#=    3.3 ms =# precompile(Tuple{Base.Iterators.var"#IteratorEltype##0#IteratorEltype##1"{Tuple{Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}}}, Int64})
#=    3.5 ms =# precompile(Tuple{Base.var"#fieldtypes##0#fieldtypes##1"{Type{Tuple{Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}}}}, Int64})
#=    9.1 ms =# precompile(Tuple{typeof(Base.ntupleany), Base.var"#fieldtypes##0#fieldtypes##1"{Type{Tuple{Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}}}}, Int64})
#=    3.6 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##16#Newter_SolveSubproblem!##17"}}}, Symbol})
#=    3.7 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##16#Newter_SolveSubproblem!##17"}}}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##16#Newter_SolveSubproblem!##17"}}}}, Int64, Int64})
#=    3.5 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##18#Newter_SolveSubproblem!##19"}}}, Symbol})
#=    3.7 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##18#Newter_SolveSubproblem!##19"}}}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##18#Newter_SolveSubproblem!##19"}}}}, Int64, Int64})
#=    3.7 ms =# precompile(Tuple{Base.var"#reverse##0#reverse##1"{Tuple{Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##20#Newter_SolveSubproblem!##21"}, Transducers.Map{Grumps.var"#Newter_SolveSubproblem!##20#Newter_SolveSubproblem!##21"}}}, Int64})
#=    3.5 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##22#Newter_SolveSubproblem!##23"}, Symbol})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##22#Newter_SolveSubproblem!##23"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Transducers.Reduction{Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##22#Newter_SolveSubproblem!##23"}, Transducers.BottomRF{Transducers.Completing{typeof(Base.:(+))}}}, Bool}, Int64, Int64})
#=    4.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##22#Newter_SolveSubproblem!##23"}}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##22#Newter_SolveSubproblem!##23"}}, Int64, Int64})
#=    3.5 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##26#Newter_SolveSubproblem!##27"}}}, Symbol})
#=    3.7 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##26#Newter_SolveSubproblem!##27"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#Newter_SolveSubproblem!##26#Newter_SolveSubproblem!##27"}}}}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{Base.Iterators.var"#IteratorSize##0#IteratorSize##1"{Tuple{Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}}}, Int64})
#=    4.5 ms =# precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.abs), typeof(Base.add_sum)}, Symbol})
#=    3.7 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#ObjectiveFunctionθ!##90#ObjectiveFunctionθ!##91"}}}, Symbol})
#=    2.7 ms =# precompile(Tuple{typeof(Base.:(∘)), Transducers.Enumerate{Int64}, Transducers.Map{Grumps.var"#ObjectiveFunctionθ!##90#ObjectiveFunctionθ!##91"}})
#=    3.0 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Grumps.var"#ObjectiveFunctionθ!##90#ObjectiveFunctionθ!##91"}, Symbol})
#=    4.5 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#ObjectiveFunctionθ!##90#ObjectiveFunctionθ!##91"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.Map{Grumps.var"#ObjectiveFunctionθ!##90#ObjectiveFunctionθ!##91"}}}}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##96#ObjectiveFunctionθ!##97"}}}, Symbol})
#=    3.8 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##96#ObjectiveFunctionθ!##97"}}}}, Int64})
#=    3.4 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##96#ObjectiveFunctionθ!##97"}}}}, Int64, Int64})
#=    3.6 ms =# precompile(Tuple{typeof(Base.getproperty), Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##98#ObjectiveFunctionθ!##99"}}}, Symbol})
#=    3.8 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##98#ObjectiveFunctionθ!##99"}}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Transducers.Map{Transducers.var"#207#208"{Array{T, 1} where T, Transducers.MapSplat{Grumps.var"#ObjectiveFunctionθ!##98#ObjectiveFunctionθ!##99"}}}}, Int64, Int64})
#=    3.7 ms =# precompile(Tuple{Type{NamedTuple{(:header,), T} where T<:Tuple}, Tuple{Bool}})
#=    3.7 ms =# precompile(Tuple{Type{NamedTuple{(:colsep,), T} where T<:Tuple}, Tuple{String}})
#=    2.6 ms =# precompile(Tuple{typeof(Base.pairs), NamedTuple{(:colsep,), Tuple{String}}})
#=    2.4 ms =# precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:colsep,), Tuple{String}}, Tuple{Symbol}})
#=    2.4 ms =# precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:colsep,), Tuple{String}}}})
#=    1.9 ms =# precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:colsep,), Tuple{String}}})
#=    3.5 ms =# precompile(Tuple{Type{NamedTuple{(:adorned,), T} where T<:Tuple}, Tuple{Bool}})
#=    3.1 ms =# precompile(Tuple{typeof(Base.pairs), NamedTuple{(:bold,), Tuple{Bool}}})
#=    2.5 ms =# precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:bold,), Tuple{Bool}}}})
#=    3.3 ms =# precompile(Tuple{typeof(Base.pairs), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}})
#=    2.7 ms =# precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}}})
#=   37.3 ms =# precompile(Tuple{StringDistances.var"#33#34"{Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}, Float64, StringDistances.Levenshtein, Base.Threads.Atomic{Float64}, String}})
#=    5.1 ms =# precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.fetch), Tuple{Base.Broadcast.Extruded{Array{Task, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Array{Float64, 1}}})
#=    3.3 ms =# precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Int64})
#=   15.0 ms =# precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{Float64, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.fetch), Tuple{Base.Broadcast.Extruded{Array{Task, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
#=    3.1 ms =# precompile(Tuple{Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsCheapEstimator, Vararg{Any}})
#=    1.9 ms =# precompile(Tuple{Grumps.var"##Data#138", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsCheapEstimator, Vararg{Any}})
#=    5.2 ms =# precompile(Tuple{Type{NamedTuple{(:options, :replicable), T} where T<:Tuple}, Tuple{Grumps.GrumpsDataOptions{Float64}, Bool}})
#=    3.2 ms =# precompile(Tuple{Type{Grumps.BothIntegrators{Mic, Mac} where Mac where Mic}, Grumps.DefaultMicroIntegrator{Float64}, Grumps.DefaultMacroIntegrator{Float64}}) # recompile
#=  194.5 ms =# precompile(Tuple{Type{Grumps.GrumpsData{T} where T<:AbstractFloat}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsSources{Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV}, Grumps.GrumpsVariables}) # recompile
#=    4.0 ms =# precompile(Tuple{typeof(Base.CoreLogging.shouldlog), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Module, Symbol, Symbol})
#=  261.3 ms =# precompile(Tuple{typeof(Base.CoreLogging.handle_message), Base.CoreLogging.ConsoleLogger, Base.CoreLogging.LogLevel, Vararg{Any, 6}}) # recompile
#=    3.6 ms =# precompile(Tuple{typeof(Base.isopen), Base.GenericIOBuffer{Memory{UInt8}}})
#=   22.9 ms =# precompile(Tuple{Base.Compiler.var"#inferiterate#abstract_iteration##0"{Type{Base.Generator{Tuple{Symbol, Symbol}, F} where F<:(FilePathsBase.var"#5#6"{FilePathsBase.PosixPath, NamedTuple{(:segments,), T}, Tuple{Symbol}} where T<:Tuple{Tuple})}, Base.Compiler.Future{Base.Compiler.CallMeta}, Base.Compiler.Future{Base.Compiler.AbstractIterationResult}}, Base.Compiler.NativeInterpreter, Base.Compiler.InferenceState})
#=   90.6 ms =# precompile(Tuple{Base.Compiler.var"#inferiterate_2arg#abstract_iteration##1"{Base.Compiler.InferenceLattice{Base.Compiler.ConditionalsLattice{Base.Compiler.PartialsLattice{Base.Compiler.ConstsLattice}}}, Array{Any, 1}, Array{Base.Compiler.CallMeta, 1}, Type{Base.Generator{Tuple{Symbol, Symbol}, F} where F<:(FilePathsBase.var"#5#6"{FilePathsBase.PosixPath, NamedTuple{(:segments,), T}, Tuple{Symbol}} where T<:Tuple{Tuple})}, Base.Compiler.Future{Base.Compiler.AbstractIterationResult}}, Base.Compiler.NativeInterpreter, Base.Compiler.InferenceState})
#=    3.5 ms =# precompile(Tuple{Type{NamedTuple{(:segments,), T} where T<:Tuple}, Tuple{Tuple{String}}})
#=    3.5 ms =# precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}})
#=    2.8 ms =# precompile(Tuple{FilePathsBase.var"##PosixPath#48", String, Type{FilePathsBase.PosixPath}, Tuple{String}})
#=    2.7 ms =# precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}, String})
#=  199.1 ms =# precompile(Tuple{typeof(Base.CoreLogging.default_metafmt), Base.CoreLogging.LogLevel, Vararg{Any, 5}}) # recompile
#=    6.8 ms =# precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{Memory{UInt8}}, Base.TTY})
#=    2.8 ms =# precompile(Tuple{typeof(Base.write), Base.TTY, Array{UInt8, 1}})
#=    6.7 ms =# precompile(Tuple{typeof(CSV.getbytebuffer), String, Bool})
#=   15.5 ms =# precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Any, Bool, Any, Int64}) # recompile
#=    3.4 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64, Int64})
#=    2.7 ms =# precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Int64})
#=   61.9 ms =# precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, Any, Bool, UInt8}) # recompile
#=    2.5 ms =# precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Any, Bool}) # recompile
#=   32.4 ms =# precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Any, Bool, UInt8, UInt8, UInt8, Nothing, Bool}) # recompile
#=    2.2 ms =# precompile(Tuple{typeof(CSV.getname), String})
#=    8.0 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{Float64, 1, S, V, A} where A<:AbstractArray{Float64, 1} where V where S}, UndefInitializer, Int64})
#=    7.6 ms =# precompile(Tuple{typeof(SentinelArrays._defaultsentinel), Type})
#=    3.7 ms =# precompile(Tuple{typeof(Base.reinterpret), Type{Float64}, Array{UInt8, 1}})
#=    8.1 ms =# precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Float64, 1, UInt8, Array{UInt8, 1}, false}, Int64})
#=    2.4 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{Float64, 1}, Float64, Base.Missing})
#=    8.0 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{Int64, 1, S, V, A} where A<:AbstractArray{Int64, 1} where V where S}, UndefInitializer, Int64})
#=    3.6 ms =# precompile(Tuple{typeof(Base.reinterpret), Type{Int64}, Array{UInt8, 1}})
#=    8.5 ms =# precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Int64, 1, UInt8, Array{UInt8, 1}, false}, Int64})
#=    2.5 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{Int64, 1}, Int64, Base.Missing})
#=   11.6 ms =# precompile(Tuple{Type{InlineStrings.String15}, WeakRefStrings.PosLenString})
#=    8.3 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String15, 1, S, V, A} where A<:AbstractArray{InlineStrings.String15, 1} where V where S}, UndefInitializer, Int64})
#=    3.8 ms =# precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String15}, Array{UInt8, 1}})
#=    8.1 ms =# precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String15, 1, UInt8, Array{UInt8, 1}, false}, Int64})
#=    2.4 ms =# precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String15, 1}, InlineStrings.String15, Base.Missing})
#=    5.6 ms =# precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}, InlineStrings.String15, Int64})
#=   26.0 ms =# precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}, Int64})
#=    2.0 ms =# precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}})
#=    1.9 ms =# precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
#=  103.7 ms =# precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String15}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
#=    2.2 ms =# precompile(Tuple{typeof(Base.length), Array{Float64, 1}})
#=    2.1 ms =# precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=    7.0 ms =# precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
#=    2.2 ms =# precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}})
#=    3.5 ms =# precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{InlineStrings.String15, 1}})
#=    2.0 ms =# precompile(Tuple{typeof(Base.length), Array{InlineStrings.String15, 1}})
#=    5.4 ms =# precompile(Tuple{typeof(DataFrames._preprocess_column), Array{InlineStrings.String15, 1}, Int64, Bool})
#=    7.1 ms =# precompile(Tuple{typeof(Base.copy), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=    2.6 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.string), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=    2.6 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{String}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.string), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}}}})
#=   24.4 ms =# precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.string), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}}}}}})
#=   12.2 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Base.SubString{String}, String})
#=   37.3 ms =# precompile(Tuple{typeof(Base.findall), Grumps.var"#120#121"{Int64, Array{String, 1}}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=   18.2 ms =# precompile(Tuple{typeof(Arrow.FlatBuffers.init), Type{Arrow.Flatbuf.Schema}, Array{UInt8, 1}, Int64})
#=   15.7 ms =# precompile(Tuple{Arrow.var"#117#118"{Base.Channel{Any}, Arrow.Table}})
#=    2.6 ms =# precompile(Tuple{typeof(Arrow.FlatBuffers.init), Type{Arrow.Flatbuf.RecordBatch}, Array{UInt8, 1}, Int64})
#=    5.1 ms =# precompile(Tuple{Type{Ptr{CodecLz4.LZ4F_dctx}}, Ptr{Nothing}})
#=    4.1 ms =# precompile(Tuple{typeof(Base.convert), Type{Ptr{CodecLz4.LZ4F_dctx}}, Ptr{Nothing}})
#=    3.9 ms =# precompile(Tuple{Type{CodecLz4.LZ4Exception}, String, String})
#=    2.8 ms =# precompile(Tuple{typeof(Base.convert), Type{Ptr{CodecZstd.LibZstd.ZSTD_DCtx_s}}, Ptr{Nothing}})
#=    4.3 ms =# precompile(Tuple{typeof(Base.cconvert), Type, CodecZstd.LibZstd.ZSTD_ResetDirective})
#=    1.8 ms =# precompile(Tuple{typeof(Base.unsafe_convert), Type{CodecZstd.LibZstd.ZSTD_ResetDirective}, CodecZstd.LibZstd.ZSTD_ResetDirective})
#=    3.5 ms =# precompile(Tuple{Type{Base.ImmutableDict{String, String}}})
#=  124.3 ms =# precompile(Tuple{Arrow.var"#125#126"{Bool, Base.Channel{Any}, ConcurrentUtilities.OrderedSynchronizer, Base.Lockable{Base.Dict{Int64, Arrow.DictEncoding{T, S, A} where A where S where T}, Base.ReentrantLock}, Arrow.Batch, Int64}})
#=  206.6 ms =# precompile(Tuple{typeof(Arrow.build), Arrow.Flatbuf.Field, Arrow.Batch, Arrow.Flatbuf.RecordBatch, Base.Lockable{Base.Dict{Int64, Arrow.DictEncoding{T, S, A} where A where S where T}, Base.ReentrantLock}, Int64, Int64, Int64, Bool})
#=    2.6 ms =# precompile(Tuple{typeof(Arrow.FlatBuffers.init), Type{Arrow.Flatbuf.FloatingPoint}, Array{UInt8, 1}, Int64})
#=   85.9 ms =# precompile(Tuple{typeof(Arrow.build), Arrow.Flatbuf.Field, Arrow.Flatbuf.FloatingPoint, Arrow.Batch, Arrow.Flatbuf.RecordBatch, Base.Lockable{Base.Dict{Int64, Arrow.DictEncoding{T, S, A} where A where S where T}, Base.ReentrantLock}, Int64, Int64, Int64, Bool})
#=    7.0 ms =# precompile(Tuple{typeof(Arrow.juliaeltype), Arrow.Flatbuf.Field, Arrow.Flatbuf.FloatingPoint, Bool})
#=    5.0 ms =# precompile(Tuple{typeof(Arrow.reinterp), Type{Float64}, Arrow.Batch, Arrow.Flatbuf.Buffer, Nothing})
#=    1.8 ms =# precompile(Tuple{typeof(Arrow.finaljuliatype), Type})
#=    3.3 ms =# precompile(Tuple{Type{Arrow.Primitive{T, A} where A where T}, Type{Float64}, Array{UInt8, 1}, Arrow.ValidityBitmap, Array{Float64, 1}, Int64, Nothing})
#=    4.2 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Arrow.Primitive{Float64, Array{Float64, 1}}, Int64, Int64, Int64}, Int64})
#=    4.0 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Arrow.Primitive{Float64, Array{Float64, 1}}, Int64, Int64, Int64}, Int64, Int64})
#=    6.5 ms =# precompile(Tuple{typeof(Base.foreach), Arrow.var"#119#120"{Arrow.Table}, Array{Any, 1}})
#=    6.7 ms =# precompile(Tuple{Arrow.var"#119#120"{Arrow.Table}, Arrow.Primitive{Float64, Array{Float64, 1}}})
#=   10.4 ms =# precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{var"#s177", 1} where var"#s177"}, Arrow.Primitive{Float64, Array{Float64, 1}}, Symbol})
#=   19.2 ms =# precompile(Tuple{typeof(Arrow.buildmetadata), Arrow.Flatbuf.Schema})
#=    2.2 ms =# precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Union{Nothing, Base.ImmutableDict{String, String}}}, Nothing})
#=    4.1 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{Float64}, Arrow.Primitive{Float64, Array{Float64, 1}}})
#=   64.6 ms =# precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Float64}, Tuple{Arrow.Primitive{Float64, Array{Float64, 1}}}}})
#=   37.5 ms =# precompile(Tuple{typeof(Base.findall), Grumps.var"#MicroCreation!##0#MicroCreation!##1"{Array{String, 1}, Int64}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=    3.4 ms =# precompile(Tuple{PooledArrays.var"#2#3", PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
#=    3.6 ms =# precompile(Tuple{Mmap.var"#6#7"{Ptr{Nothing}, Int64}, Memory{UInt8}})
#=   19.8 ms =# precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
#=   13.9 ms =# precompile(Tuple{typeof(Base.vcat), Array{String, 1}, String})
#=    4.2 ms =# precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64})
#=   19.2 ms =# precompile(Tuple{typeof(Base.string), String, InlineStrings.String15, String})
#=    7.9 ms =# precompile(Tuple{typeof(Grumps.findstringinarray), InlineStrings.String15, Array{String, 1}, String})
#=  488.2 ms =# precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}}, Base.Val{false}, Array{Int64, 1}, Bool, Nothing, Bool})
#=    4.9 ms =# precompile(Tuple{typeof(Base._array_for), Type{InlineStrings.String15}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   13.0 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{InlineStrings.String15, 1}, InlineStrings.String15, Base.Generator{DataFrames.GroupKeys{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Grumps.var"#126#127"{Grumps.GrumpsVariables, DataFrames.GroupedDataFrame{DataFrames.DataFrame}}}, Tuple{Base.OneTo{Int64}, Int64}})
#=   66.5 ms =# precompile(Tuple{typeof(Grumps.MacroCreation!), Bool, Array{String, 1}, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}, Grumps.GrumpsVariables, Array{InlineStrings.String15, 1}, Grumps.BothIntegrators{Grumps.DefaultMicroIntegrator{Float64}, Grumps.DefaultMacroIntegrator{Float64}}, Int64, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Random123.Threefry4x{UInt64, 32}, 1}, Grumps.GrumpsNodesWeights{Float64}, Symbol, Array{Array{Int64, 1}, 1}, Array{Grumps.GrumpsMicroData{Float64}, 1}, Array{Grumps.GrumpsMacroData{Float64}, 1}, Type{Float64}, Grumps.GrumpsDataOptions{Float64}, Int64})
#=    5.5 ms =# precompile(Tuple{typeof(Base.copy), Array{InlineStrings.String15, 1}})
#=   36.9 ms =# precompile(Tuple{typeof(Base.findall), Grumps.var"#MacroCreation!##0#MacroCreation!##1"{Array{String, 1}, Int64}, Array{InlineStrings.String15, 1}})
#=   14.0 ms =# precompile(Tuple{typeof(Grumps.whichset), Random123.Threefry4x{UInt64, 32}, Int64, Int64, Base.Val{false}, Base.Val{false}})
#=   13.4 ms =# precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
#=   15.7 ms =# precompile(Tuple{typeof(Base.__cat_offset!), Array{Symbol, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Array{Symbol, 1}, Symbol})
#=    2.6 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{Float64}, Array{Float64, 1}})
#=   14.0 ms =# precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Float64}, Tuple{Array{Float64, 1}}}})
#=  287.9 ms =# precompile(Tuple{Type{Grumps.GrumpsPLMData{T} where T<:AbstractFloat}, Base.Val{:Grumps}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Bool, LinearAlgebra.UniformScaling{Float64}, SparseArrays.SparseMatrixCSC{Bool, Int64}}) # recompile
#=    7.3 ms =# precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, Int64, Array{Float64, 1}})
#=    6.7 ms =# precompile(Tuple{typeof(LinearAlgebra.generic_trimatdiv!), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, Char, Char, Function, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}})
#=    2.5 ms =# precompile(Tuple{typeof(Base.adjoint), Array{Float64, 2}})
#=    6.1 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, Array{Float64, 2}})
#=    5.9 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}})
#=    2.0 ms =# precompile(Tuple{typeof(Base.real), Float64})
#=    2.1 ms =# precompile(Tuple{typeof(Base.iszero), Float64})
#=    2.4 ms =# precompile(Tuple{Type{NamedTuple{(:full,), T} where T<:Tuple}, Tuple{Bool}})
#=   59.3 ms =# precompile(Tuple{typeof(LinearAlgebra.nullspace), Array{Float64, 2}})
#=   32.1 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, LinearAlgebra.UniformScaling{Float64}})
#=    4.6 ms =# precompile(Tuple{Type{LinearAlgebra.Symmetric{T, S} where S<:(AbstractArray{var"#s4790", 2} where var"#s4790"<:T) where T}, Array{Float64, 2}})
#=    3.1 ms =# precompile(Tuple{typeof(LinearAlgebra.cholesky), LinearAlgebra.Symmetric{Float64, Array{Float64, 2}}})
#=   15.6 ms =# precompile(Tuple{typeof(Base.getproperty), LinearAlgebra.Cholesky{Float64, Array{Float64, 2}}, Symbol})
#=    5.4 ms =# precompile(Tuple{typeof(Base.inv), LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
#=   25.5 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, LinearAlgebra.UpperTriangular{Float64, Array{Float64, 2}}})
#=    6.1 ms =# precompile(Tuple{typeof(Base._array_for), Type{String}, Base.HasShape{2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
#=   31.4 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 2}, String, Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#134#135"{Int64, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Array{String, 1}, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
#=    2.1 ms =# precompile(Tuple{typeof(Base.string), InlineStrings.String15})
#=   26.7 ms =# precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{String, 2}, InlineStrings.String15, Int64})
#=   23.4 ms =# precompile(Tuple{typeof(Base.collect_to!), Array{AbstractString, 2}, Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#134#135"{Int64, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Array{String, 1}, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}}}, Int64, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
#=    4.9 ms =# precompile(Tuple{typeof(Base._array_for), Type{Array{AbstractString, 2}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   27.9 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{AbstractString, 2}, 1}, Array{AbstractString, 2}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#132#133"{Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Array{String, 1}, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}}}, Int64})
#=    3.7 ms =# precompile(Tuple{typeof(Base.vcat), Array{AbstractString, 2}, Array{AbstractString, 2}, Array{AbstractString, 2}, Vararg{Array{AbstractString, 2}}})
#=    2.7 ms =# precompile(Tuple{typeof(Base.typed_vcat), Type{AbstractString}, Array{AbstractString, 2}, Array{AbstractString, 2}, Array{AbstractString, 2}, Vararg{Array{AbstractString, 2}}})
#=   70.9 ms =# precompile(Tuple{typeof(Base._typed_vcat), Type{AbstractString}, NTuple{5, Array{AbstractString, 2}}})
#=   53.4 ms =# precompile(Tuple{Type{Grumps.VariableNames}, Array{Symbol, 2}, Array{Symbol, 1}, Array{String, 1}, Array{Symbol, 1}, Array{AbstractString, 2}})
#=   19.7 ms =# precompile(Tuple{typeof(Base.string), InlineStrings.String15, String, String})
#=   12.1 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Base.OneTo{Int64}, Grumps.var"#VariableNames##0#VariableNames##1"{Array{AbstractString, 2}}}, Int64})
#=    2.4 ms =# precompile(Tuple{typeof(Grumps.dimθ), Grumps.GrumpsMicroDataHog{Float64}})
#=    2.0 ms =# precompile(Tuple{typeof(Grumps.dimθz), Grumps.GrumpsMicroDataHog{Float64}})
#=    2.0 ms =# precompile(Tuple{typeof(Grumps.dimθν), Grumps.GrumpsMicroDataHog{Float64}})
#=    2.1 ms =# precompile(Tuple{typeof(Grumps.dimδm), Grumps.GrumpsMicroDataHog{Float64}})
#=    5.0 ms =# precompile(Tuple{Type{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}}, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}})
#=    4.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   22.9 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, 1}, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Base.Generator{Base.OneTo{Int64}, Grumps.var"#31#32"{Float64, Array{Grumps.GrumpsMicroData{Float64}, 1}, Array{Grumps.GrumpsMacroData{Float64}, 1}}}, Int64})
#=   29.8 ms =# precompile(Tuple{typeof(Base.convert), Type{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}}, Array{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, 1}})
#=    2.9 ms =# precompile(Tuple{typeof(Base.size), Array{Float64, 3}, Int64})
#=   30.5 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#Balance!##2#Balance!##3"{Grumps.var"#Balance!##4#Balance!##5"{Float64, Grumps.GrumpsData{Float64}, Array{Int64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=    3.0 ms =# precompile(Tuple{typeof(Base.ntuple), Base.Returns{Bool}, Base.Val{3}})
#=   14.2 ms =# precompile(Tuple{typeof(Base.maybeview), Array{Float64, 3}, Function, Function, Int64})
#=   18.1 ms =# precompile(Tuple{Core.GeneratedFunctionStub, UInt64, Method, Any, Vararg{Any}}) # recompile
#=   19.2 ms =# precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr, Vararg{Expr}}) # recompile
#=   15.8 ms =# precompile(Tuple{typeof(Base.getindex), Array{Float64, 3}, Function, Function, Int64})
#=    2.6 ms =# precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(/)), Array{Float64, 2}, Float64})
#=   36.7 ms =# precompile(Tuple{typeof(Base.Broadcast.materialize!), Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}, true}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{2}, Nothing, typeof(Base.:(/)), Tuple{Array{Float64, 2}, Float64}}})
#=   34.3 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#Balance!##6#Balance!##7"{Grumps.var"#Balance!##8#Balance!##9"{Float64, Grumps.GrumpsData{Float64}, Int64, Array{Int64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   35.0 ms =# precompile(Tuple{typeof(Grumps.BalanceXConstants), Grumps.GrumpsMicroDataHog{Float64}, Int64})
#=    3.3 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64, Int64}, Int64})
#=    3.0 ms =# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64, Int64}, Int64, Int64})
#=    3.1 ms =# precompile(Tuple{typeof(Grumps.computeμσ), Float64, Float64, Int64})
#=    2.0 ms =# precompile(Tuple{typeof(Base.:(>)), Float64, Float64})
#=   29.3 ms =# precompile(Tuple{typeof(Grumps.Balance!), Grumps.GrumpsMicroDataHog{Float64}, Int64, Float64})
#=   22.9 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#Balance!##10#Balance!##11"{Grumps.var"#Balance!##12#Balance!##13"{Grumps.GrumpsData{Float64}, Base.UnitRange{Int64}}}, Int64}})
#=   16.6 ms =# precompile(Tuple{typeof(Grumps.Balance!), Grumps.GrumpsMacroDataAnt{Float64}, Int64, Float64})
#=    4.0 ms =# precompile(Tuple{typeof(Base.checkbounds), String, Base.UnitRange{Int64}})
#=    2.5 ms =# precompile(Tuple{typeof(Base.between), UInt8, UInt8, UInt8})
#=    2.9 ms =# precompile(Tuple{typeof(Base.repeat), String, Int64})
#=    3.5 ms =# precompile(Tuple{Type{NamedTuple{(:printstructure,), T} where T<:Tuple}, Tuple{Bool}})
#=  367.0 ms =# precompile(Tuple{typeof(Grumps.grumps!), Grumps.GrumpsCheapEstimator, Grumps.GrumpsData{Float64}}) # recompile
#=   20.8 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Crayons.Crayon, String, String, String, Crayons.Crayon, String})
#=    3.0 ms =# precompile(Tuple{typeof(Grumps.dimS), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}})
#=    4.5 ms =# precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimS), Tuple{Base.Broadcast.Extruded{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Int64}})
#=   13.5 ms =# precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Int64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimS), Tuple{Base.Broadcast.Extruded{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
#=    6.7 ms =# precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
#=    2.9 ms =# precompile(Tuple{typeof(Grumps.dimJ), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}})
#=    4.5 ms =# precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimJ), Tuple{Base.Broadcast.Extruded{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Int64}})
#=   13.4 ms =# precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Int64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimJ), Tuple{Base.Broadcast.Extruded{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
#=    2.5 ms =# precompile(Tuple{typeof(Base.round), Float64})
#=    6.1 ms =# precompile(Tuple{typeof(Base.iterate), Array{Tuple{Int64, String}, 1}})
#=    3.9 ms =# precompile(Tuple{typeof(Base.iterate), Array{Tuple{Int64, String}, 1}, Int64})
#=    4.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMicroDataHog{Float64}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   25.8 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMicroDataHog{Float64}, 1}, Grumps.GrumpsMicroDataHog{Float64}, Base.Generator{Base.OneTo{Int64}, Grumps.var"#dimRmic##0#dimRmic##1"{Grumps.GrumpsData{Float64}}}, Int64})
#=    2.6 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMicroDataHog{Float64}, 1}}})
#=    2.6 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMicroDataHog{Float64}, 1}}, Tuple{Base.OneTo{Int64}}})
#=   17.1 ms =# precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMicroDataHog{Float64}, 1}}}})
#=    4.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMacroDataAnt{Float64}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   24.8 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMacroDataAnt{Float64}, 1}, Grumps.GrumpsMacroDataAnt{Float64}, Base.Generator{Base.OneTo{Int64}, Grumps.var"#dimRmac##0#dimRmac##1"{Grumps.GrumpsData{Float64}}}, Int64})
#=    2.5 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroDataAnt{Float64}, 1}}})
#=    2.6 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroDataAnt{Float64}, 1}}, Tuple{Base.OneTo{Int64}}})
#=   17.1 ms =# precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroDataAnt{Float64}, 1}}}})
#=    7.3 ms =# precompile(Tuple{typeof(Base.vect), Tuple{Int64, String}, Vararg{Tuple{Int64, String}}})
#=    6.0 ms =# precompile(Tuple{typeof(Base.println), Crayons.Crayon, String, Crayons.Crayon, String, String, String, String, String, Crayons.Crayon})
#=   11.8 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Crayons.Crayon, String, Crayons.Crayon, String, String, String, String, String, Crayons.Crayon, Vararg{Any}})
#=    4.9 ms =# precompile(Tuple{typeof(Base.println), Vararg{String, 6}})
#=   12.0 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Vararg{String, 7}})
#=    6.2 ms =# precompile(Tuple{typeof(Base.println), Crayons.Crayon, String, Crayons.Crayon, String, String, String, String, String, String, Crayons.Crayon})
#=   11.9 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Crayons.Crayon, String, Crayons.Crayon, String, String, String, String, String, String, Vararg{Any}})
#=    5.2 ms =# precompile(Tuple{typeof(Base.println), Vararg{String, 7}})
#=   12.4 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Vararg{String, 8}})
#=   20.1 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Crayons.Crayon, String, Crayons.Crayon, String, String})
#=   29.3 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Crayons.Crayon, String, Crayons.Crayon, Bool, String})
#=    2.8 ms =# precompile(Tuple{typeof(Grumps.dimδ), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}})
#=    2.8 ms =# precompile(Tuple{Type{Grumps.GrumpsMicroSpace{T} where T<:AbstractFloat}, Grumps.GrumpsMicroDataHog{Float64}, Bool})
#=    5.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   21.2 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, 1}, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#GrumpsSpace##0#GrumpsSpace##1"{Grumps.GrumpsData{Float64}}}, Int64})
#=    9.1 ms =# precompile(Tuple{Type{Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}}, Array{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, 1}, Array{Float64, 1}, Bool, Grumps.GrumpsNoSemaphores})
#=    8.6 ms =# precompile(Tuple{Type{NLSolversBase.InplaceObjective{DF, FDF, FGH, Hv, FGHv} where FGHv where Hv where FGH where FDF where DF}, Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsCheapEstimator}, Nothing, Nothing})
#=  308.3 ms =# precompile(Tuple{typeof(Optim.optimize), NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsCheapEstimator}, Nothing, Nothing}, Array{Float64, 1}, Optim.NewtonTrustRegion{Float64}, Optim.Options{Float64, Grumps.var"#177#178"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Array{Int64, 1}, Array{Float64, 1}, Grumps.GrumpsSolution{Float64}, Grumps.GrumpsCheapEstimator}}})
#=  561.9 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsCheapEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=    9.6 ms =# precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Symbol, 1}, LoopVectorization.OperationStruct, Int64})
#=    4.2 ms =# precompile(Tuple{typeof(Base._any_tuple), Base.var"#TupleOrBottom##0#TupleOrBottom##1", Bool, Type})
#=   49.3 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##18#ObjectiveFunctionθ!##19"{Grumps.var"#ObjectiveFunctionθ!##20#ObjectiveFunctionθ!##21"{Grumps.GrumpsFGH{Float64}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Base.Threads.Atomic{Int64}, Base.Semaphore, Bool, Bool, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   55.3 ms =# precompile(Tuple{typeof(Grumps.ObjectiveFunctionθ1!), Grumps.GrumpsMarketFGH{Float64}, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Bool, Bool, Bool, Int64})
#=    7.5 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=   82.0 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ChoiceProbabilities!##0#ChoiceProbabilities!##1"{Grumps.var"#ChoiceProbabilities!##2#ChoiceProbabilities!##3"{Array{Float64, 3}, Array{Float64, 2}, Array{Float64, 1}, Array{Float64, 3}, Array{Int64, 1}, Array{Float64, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   12.4 ms =# precompile(Tuple{Grumps.var"#ℳ𝒶𝓀ℯ#ComputeΣππ##8"{Grumps.var"#𝒜𝒸𝓉!#ComputeΣππ##4"}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 3}})
#=   58.4 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=   52.2 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   26.6 ms =# precompile(Tuple{typeof(Grumps.OutsideObjective1!), Grumps.GrumpsSingleFGH{Float64}, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsCheapEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64, Bool, Bool, Bool})
#=   20.2 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##24#ObjectiveFunctionθ!##25"{Grumps.var"#ObjectiveFunctionθ!##26#ObjectiveFunctionθ!##27"{Grumps.GrumpsFGH{Float64}, Array{Array{Float64, 2}, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   22.6 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##30#ObjectiveFunctionθ!##31"{Grumps.var"#ObjectiveFunctionθ!##32#ObjectiveFunctionθ!##33"{Grumps.GrumpsFGH{Float64}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Base.UnitRange{Int64}}}, Int64}})
#=    3.5 ms =# precompile(Tuple{typeof(Base.eachindex), Array{Float64, 1}})
#=    2.8 ms =# precompile(Tuple{Base.Iterators.var"#IteratorSize##0#IteratorSize##1"{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Int64})
#=    4.7 ms =# precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{typeof(Base.identity), typeof(Base.:(&))}, Symbol})
#=   57.1 ms =# precompile(Tuple{typeof(Core.kwcall), NamedTuple{(:atol,), Tuple{Float64}}, typeof(Base.isapprox), Array{Float64, 1}, Array{Float64, 1}})
#=    5.0 ms =# precompile(Tuple{typeof(Base.copyto!), Array{Float64, 1}, Array{Float64, 1}})
#=  105.1 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsCheapEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=  174.2 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsCheapEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   11.9 ms =# precompile(Tuple{typeof(Grumps.MacroObjectiveθ!), Float64, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsMacroDataAnt{Float64}, Grumps.GrumpsMacroSpace{Float64}, Grumps.GrumpsOptimizationOptions, Int64, Bool})
#=   47.7 ms =# precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Vararg{Array{Float64, 1}}})
#=    3.9 ms =# precompile(Tuple{typeof(Base.minimum), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.2 ms =# precompile(Tuple{typeof(Optim.iterations), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.1 ms =# precompile(Tuple{typeof(Optim.iteration_limit_reached), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    4.9 ms =# precompile(Tuple{typeof(Optim.converged), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.2 ms =# precompile(Tuple{typeof(Optim.f_converged), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.2 ms =# precompile(Tuple{typeof(Optim.g_converged), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.1 ms =# precompile(Tuple{typeof(Optim.x_converged), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.0 ms =# precompile(Tuple{typeof(Optim.f_calls), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.0 ms =# precompile(Tuple{typeof(Optim.g_calls), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    2.0 ms =# precompile(Tuple{typeof(Optim.h_calls), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    9.3 ms =# precompile(Tuple{typeof(Optim.f_trace), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    9.2 ms =# precompile(Tuple{typeof(Optim.g_norm_trace), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=   13.5 ms =# precompile(Tuple{typeof(Optim.x_trace), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=    4.3 ms =# precompile(Tuple{typeof(Base._array_for), Type{Array{Float64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   12.5 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Optim.var"#x_trace##2#x_trace##3"}, Int64})
#=    2.5 ms =# precompile(Tuple{typeof(Optim.time_run), Optim.MultivariateOptimizationResults{Optim.NewtonTrustRegion{Float64}, Array{Float64, 1}, Float64, Float64, Array{Optim.OptimizationState{Float64, Optim.NewtonTrustRegion{Float64}}, 1}, Bool, NamedTuple{(:f_limit_reached, :g_limit_reached, :h_limit_reached, :time_limit, :callback, :f_increased), NTuple{6, Bool}}}})
#=   86.2 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, SparseArrays.SparseMatrixCSC{Float64, Int64}, Array{Float64, 2}})
#=   53.6 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, SparseArrays.SparseMatrixCSC{Float64, Int64}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}})
#=   74.9 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, SparseArrays.SparseMatrixCSC{Float64, Int64}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}})
#=   39.9 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsCheapEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.1 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsCheapEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.0 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsCheapEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.1 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
#=    1.8 ms =# precompile(Tuple{typeof(Base.reduce_first), typeof(Base.add_sum), Array{Float64, 2}})
#=    6.4 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##12#VarEst##13"{Grumps.GrumpsCheapEstimator, Int64, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    3.5 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsCheapEstimator, Base.Val{:δ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.0 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, Array{Float64, 2}, Array{Float64, 2}})
#=    1.9 ms =# precompile(Tuple{typeof(Base.add_sum), Array{Float64, 2}, Array{Float64, 2}})
#=    3.8 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsCheapEstimator, Base.Val{:θ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   17.6 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, Array{Float64, 2}})
#=    5.9 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsCheapEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    3.5 ms =# precompile(Tuple{typeof(Base.axes), Array{Float64, 2}, Int64})
#=    2.5 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#se##0#se##1"{Array{Float64, 2}}, Base.OneTo{Int64}})
#=   15.1 ms =# precompile(Tuple{typeof(Base.collect), Base.Generator{Base.OneTo{Int64}, Grumps.var"#se##0#se##1"{Array{Float64, 2}}}})
#=    3.0 ms =# precompile(Tuple{typeof(Base.getindex), Array{Grumps.GrumpsEstimate{Float64}, 1}, Int64})
#=    4.7 ms =# precompile(Tuple{typeof(Base.setproperty!), Grumps.GrumpsEstimate{Float64}, Symbol, Float64})
#=    3.8 ms =# precompile(Tuple{typeof(Base.getproperty), Grumps.GrumpsEstimate{Float64}, Symbol})
#=    2.8 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##0#VarEst##1"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   27.2 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsCheapEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    6.4 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##4#VarEst##5"{Int64, Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=    4.4 ms =# precompile(Tuple{typeof(Base._array_for), Type{Array{Float64, 2}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   24.0 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#VarEst##2#VarEst##3"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}, Base.UnitRange{Int64}}}, Int64})
#=    2.1 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}})
#=    2.9 ms =# precompile(Tuple{typeof(Base.getindex), Array{Array{Float64, 2}, 1}, Int64})
#=    2.0 ms =# precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}})
#=    5.9 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
#=   26.2 ms =# precompile(Tuple{typeof(Base.sum), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}}})
#=    2.7 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    7.8 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsCheapEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   21.3 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#se##2#se##3"{Grumps.GrumpsCheapEstimator, Grumps.GrumpsIngredients{Float64}}}, Int64})
#=    3.2 ms =# precompile(Tuple{typeof(Base.getindex), Pair{Symbol, DataType}, Int64})
#=  224.8 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Array{Float64, 1}, String, String})
#=   18.5 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Float64, String})
#=   58.7 ms =# precompile(Tuple{typeof(Base.print), Base.TTY, Grumps.GrumpsSolution{Float64}, String, String})
#=    2.3 ms =# precompile(Tuple{typeof(Base.println), Base.TTY, Float64})
#=   12.8 ms =# precompile(Tuple{typeof(Base.println), Base.TTY, Int64})
#=   13.2 ms =# precompile(Tuple{typeof(Base.println), Base.TTY, Bool})
#=   13.5 ms =# precompile(Tuple{typeof(Base.println), Base.TTY, Array{Float64, 1}})
#=    2.9 ms =# precompile(Tuple{Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsCLEREstimator, Vararg{Any}})
#=    1.9 ms =# precompile(Tuple{Grumps.var"##Data#138", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsCLEREstimator, Vararg{Any}})
#=  153.3 ms =# precompile(Tuple{Type{Grumps.GrumpsData{T} where T<:AbstractFloat}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsSources{Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV}, Grumps.GrumpsVariables}) # recompile
#=  287.9 ms =# precompile(Tuple{Type{Grumps.GrumpsPLMData{T} where T<:AbstractFloat}, Base.Val{:Grumps}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Bool, LinearAlgebra.UniformScaling{Float64}, SparseArrays.SparseMatrixCSC{Bool, Int64}}) # recompile
#=  228.9 ms =# precompile(Tuple{typeof(Grumps.grumps!), Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}}) # recompile
#=    9.8 ms =# precompile(Tuple{Type{NLSolversBase.InplaceObjective{DF, FDF, FGH, Hv, FGHv} where FGHv where Hv where FGH where FDF where DF}, Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.PMLFGH{Float64}, Grumps.GrumpsCLEREstimator}, Nothing, Nothing})
#=  272.0 ms =# precompile(Tuple{typeof(Optim.optimize), NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.PMLFGH{Float64}, Grumps.GrumpsCLEREstimator}, Nothing, Nothing}, Array{Float64, 1}, Optim.NewtonTrustRegion{Float64}, Optim.Options{Float64, Grumps.var"#177#178"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Array{Int64, 1}, Array{Float64, 1}, Grumps.GrumpsSolution{Float64}, Grumps.GrumpsCLEREstimator}}})
#=  157.9 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.PMLFGH{Float64}, Grumps.GrumpsCLEREstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=   13.1 ms =# precompile(Tuple{typeof(Grumps.FillAθ!), Base.Val{:Grumps}, Array{Float64, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsMacroDataAnt{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMacroSpace{Float64}})
#=    8.1 ms =# precompile(Tuple{typeof(Base.copy), Memory{Float64}})
#=   67.9 ms =# precompile(Tuple{Grumps.var"#grumpsδ!##4#grumpsδ!##5"{Array{Float64, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}}, Float64, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}})
#=   54.2 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#InsideObjective!##0#InsideObjective!##1"{Grumps.var"#InsideObjective!##2#InsideObjective!##3"{Float64, Float64, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=    4.7 ms =# precompile(Tuple{Type{Array{Array{Grumps.NTRTrace1{Float64}, 1}, 1}}, UndefInitializer, Int64})
#=    7.2 ms =# precompile(Tuple{typeof(Base.convert), Type{Array{Grumps.NTRTrace1{Float64}, 1}}, Array{Array{Grumps.NTRTrace1{Float64}, 1}, 1}})
#=    7.5 ms =# precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
#=   26.7 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#Heigen##0#Heigen##1"{Grumps.var"#Heigen##2#Heigen##3"{Float64, Array{Array{Float64, 2}, 1}, Array{LinearAlgebra.Eigen{Float64, Float64, Array{Float64, 2}, Array{Float64, 1}}, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   26.4 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#HeigenQgQK##4#HeigenQgQK##5"{Grumps.var"#HeigenQgQK##6#HeigenQgQK##7"{Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   60.8 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ntr_find_direction!##2#ntr_find_direction!##3"{Grumps.var"#ntr_find_direction!##4#ntr_find_direction!##5"{Float64, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Float64, Array{Array{Float64, 2}, 1}, Array{Float64, 1}, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}}, Int64}})
#=    3.5 ms =# precompile(Tuple{Grumps.var"#binaryrun##0#binaryrun##1"{Grumps.var"#computesom#initial_safeguards##2"{Float64, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}, Array{Int64, 1}, Int64, Int64}, Int64, Int64, Nothing, Int64}})
#=   81.2 ms =# precompile(Tuple{Grumps.var"#grumpsδ!##4#grumpsδ!##5"{Array{Float64, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}}, Float64, Array{Array{Float64, 1}, 1}, Nothing, Array{Array{Float64, 1}, 1}})
#=   48.8 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#InsideObjective!##0#InsideObjective!##1"{Grumps.var"#InsideObjective!##2#InsideObjective!##3"{Float64, Float64, Array{Array{Float64, 1}, 1}, Nothing, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   52.3 ms =# precompile(Tuple{Grumps.var"#grumpsδ!##4#grumpsδ!##5"{Array{Float64, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}}, Nothing, Nothing, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}})
#=   47.7 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#InsideObjective!##0#InsideObjective!##1"{Grumps.var"#InsideObjective!##2#InsideObjective!##3"{Float64, Nothing, Nothing, Array{Array{Float64, 2}, 1}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   46.0 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##50#ObjectiveFunctionθ!##51"{Grumps.var"#ObjectiveFunctionθ!##52#ObjectiveFunctionθ!##53"{Grumps.PMLFGH{Float64}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Base.Semaphore, Base.Threads.Atomic{Int64}, Bool, Bool, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=    8.5 ms =# precompile(Tuple{Type{Array{Array{Float64, 2}, 1}}, UndefInitializer, Int64})
#=   49.9 ms =# precompile(Tuple{typeof(Base.Threads.threading_run), Grumps.var"#HeigenQgQK##4#HeigenQgQK##5"{Grumps.var"#HeigenQgQK##6#HeigenQgQK##7"{Array{Array{Float64, 2}, 1}, Array{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Base.UnitRange{Int64}}}, Bool})
#=  114.5 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#HeigenQgQK##4#HeigenQgQK##5"{Grumps.var"#HeigenQgQK##6#HeigenQgQK##7"{Array{Array{Float64, 2}, 1}, Array{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   85.1 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ntr_find_direction##2#ntr_find_direction##3"{Grumps.var"#ntr_find_direction##4#ntr_find_direction##5"{Float64, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 2}, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 2}, 1}, Float64, Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}}, Int64}})
#=   30.0 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#Symmetrize!##0#Symmetrize!##1"{Grumps.var"#Symmetrize!##2#Symmetrize!##3"{Array{Float64, 2}, Int64, Base.UnitRange{Int64}}}, Int64}})
#=  130.8 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.PMLFGH{Float64}, Grumps.GrumpsCLEREstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=   14.7 ms =# precompile(Tuple{typeof(Base.setproperty!), Grumps.NTRState{Float64}, Symbol, Float64})
#=  136.1 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.PMLFGH{Float64}, Grumps.GrumpsCLEREstimator}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=  108.1 ms =# precompile(Tuple{typeof(Grumps.ObjectiveFunctionθ!), Grumps.PMLFGH{Float64}, Float64, Nothing, Nothing, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsCLEREstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Array{Float64, 1}, Array{Array{Float64, 1}, 1}}) # recompile
#=   12.8 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##12#VarEst##13"{Grumps.GrumpsCLEREstimator, Int64, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    5.0 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##0#VarEst##1"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   21.3 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsCLEREstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    9.5 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##4#VarEst##5"{Int64, Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   24.1 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#VarEst##2#VarEst##3"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}, Base.UnitRange{Int64}}}, Int64})
#=    6.1 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#VarEst##6#VarEst##7"{Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.UnitRange{Int64}})
#=   29.8 ms =# precompile(Tuple{typeof(Base.sum), Base.Generator{Base.UnitRange{Int64}, Grumps.var"#VarEst##6#VarEst##7"{Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}}})
#=    6.1 ms =# precompile(Tuple{typeof(Base.:(*)), LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}, LinearAlgebra.Adjoint{Float64, Array{Float64, 2}}})
#=    6.0 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
#=   26.0 ms =# precompile(Tuple{typeof(Base.sum), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}}})
#=    2.6 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    7.8 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsCLEREstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   21.2 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#se##2#se##3"{Grumps.GrumpsCLEREstimator, Grumps.GrumpsIngredients{Float64}}}, Int64})
#=    3.3 ms =# precompile(Tuple{Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsMDLEEstimator, Vararg{Any}})
#=    1.9 ms =# precompile(Tuple{Grumps.var"##Data#138", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsMDLEEstimator, Vararg{Any}})
#=  151.7 ms =# precompile(Tuple{Type{Grumps.GrumpsData{T} where T<:AbstractFloat}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsSources{Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV}, Grumps.GrumpsVariables}) # recompile
#=  288.9 ms =# precompile(Tuple{Type{Grumps.GrumpsPLMData{T} where T<:AbstractFloat}, Base.Val{:Grumps}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Bool, LinearAlgebra.UniformScaling{Float64}, SparseArrays.SparseMatrixCSC{Bool, Int64}}) # recompile
#=  169.2 ms =# precompile(Tuple{typeof(Grumps.grumps!), Grumps.GrumpsMDLEEstimator, Grumps.GrumpsData{Float64}}) # recompile
#=    9.5 ms =# precompile(Tuple{Type{NLSolversBase.InplaceObjective{DF, FDF, FGH, Hv, FGHv} where FGHv where Hv where FGH where FDF where DF}, Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMDLEEstimator}, Nothing, Nothing})
#=  271.5 ms =# precompile(Tuple{typeof(Optim.optimize), NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMDLEEstimator}, Nothing, Nothing}, Array{Float64, 1}, Optim.NewtonTrustRegion{Float64}, Optim.Options{Float64, Grumps.var"#177#178"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Array{Int64, 1}, Array{Float64, 1}, Grumps.GrumpsSolution{Float64}, Grumps.GrumpsMDLEEstimator}}})
#=  205.4 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMDLEEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=   52.4 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##18#ObjectiveFunctionθ!##19"{Grumps.var"#ObjectiveFunctionθ!##20#ObjectiveFunctionθ!##21"{Grumps.GrumpsFGH{Float64}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Base.Threads.Atomic{Int64}, Base.Semaphore, Bool, Bool, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=    7.5 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=    7.4 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=    7.3 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroDataAnt{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   98.7 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMDLEEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=  168.0 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMDLEEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   12.8 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##12#VarEst##13"{Grumps.GrumpsMDLEEstimator, Int64, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=   29.0 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsMDLEEstimator, Base.Val{:θ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    4.4 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMDLEEstimator, Base.Val{:δ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    3.5 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMDLEEstimator, Base.Val{:θ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    5.6 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMDLEEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   67.0 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsMDLEEstimator, Base.Val{:β}, Base.Val{:β}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.8 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##0#VarEst##1"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   11.3 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsMDLEEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    6.4 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##4#VarEst##5"{Int64, Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   23.8 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#VarEst##2#VarEst##3"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}, Base.UnitRange{Int64}}}, Int64})
#=    6.1 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
#=   26.0 ms =# precompile(Tuple{typeof(Base.sum), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}}})
#=    2.7 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    7.7 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsMDLEEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   21.2 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#se##2#se##3"{Grumps.GrumpsMDLEEstimator, Grumps.GrumpsIngredients{Float64}}}, Int64})
#=    3.3 ms =# precompile(Tuple{Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsMixedLogitEstimator, Vararg{Any}})
#=    1.9 ms =# precompile(Tuple{Grumps.var"##Data#138", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Type{Grumps.Data{T} where T<:AbstractFloat}, Grumps.GrumpsMixedLogitEstimator, Vararg{Any}})
#=  158.4 ms =# precompile(Tuple{Type{Grumps.GrumpsData{T} where T<:AbstractFloat}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsSources{Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV, Grumps.SourceFileCSV}, Grumps.GrumpsVariables}) # recompile
#=  289.4 ms =# precompile(Tuple{Type{Grumps.GrumpsPLMData{T} where T<:AbstractFloat}, Base.Val{:Grumps}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsSources{DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame, DataFrames.DataFrame}, Grumps.GrumpsVariables, Array{Array{Int64, 1}, 1}, Bool, LinearAlgebra.UniformScaling{Float64}, SparseArrays.SparseMatrixCSC{Bool, Int64}}) # recompile
#=    3.5 ms =# precompile(Tuple{Type{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}}, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}})
#=    4.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   19.5 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, 1}, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Base.Generator{Base.OneTo{Int64}, Grumps.var"#31#32"{Float64, Array{Grumps.GrumpsMicroData{Float64}, 1}, Array{Grumps.GrumpsMacroData{Float64}, 1}}}, Int64})
#=   25.1 ms =# precompile(Tuple{typeof(Base.convert), Type{Array{Grumps.GrumpsMarketData{Float64, Mic, Mac} where Mac<:Grumps.GrumpsMacroData{Float64} where Mic<:Grumps.GrumpsMicroData{Float64}, 1}}, Array{Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, 1}})
#=  234.7 ms =# precompile(Tuple{typeof(Grumps.grumps!), Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsData{Float64}}) # recompile
#=    2.6 ms =# precompile(Tuple{typeof(Grumps.dimS), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}})
#=    2.2 ms =# precompile(Tuple{typeof(Grumps.dimJ), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}})
#=    1.9 ms =# precompile(Tuple{typeof(Base.round), Int64})
#=    4.7 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMacroNoData{Float64}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   22.1 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMacroNoData{Float64}, 1}, Grumps.GrumpsMacroNoData{Float64}, Base.Generator{Base.OneTo{Int64}, Grumps.var"#dimRmac##0#dimRmac##1"{Grumps.GrumpsData{Float64}}}, Int64})
#=    2.4 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroNoData{Float64}, 1}}})
#=    2.5 ms =# precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroNoData{Float64}, 1}}, Tuple{Base.OneTo{Int64}}})
#=   16.5 ms =# precompile(Tuple{typeof(Base.copy), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Grumps.dimR), Tuple{Array{Grumps.GrumpsMacroNoData{Float64}, 1}}}})
#=    2.3 ms =# precompile(Tuple{typeof(Grumps.dimδ), Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}})
#=    5.5 ms =# precompile(Tuple{typeof(Base._array_for), Type{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
#=   22.6 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, 1}, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#GrumpsSpace##0#GrumpsSpace##1"{Grumps.GrumpsData{Float64}}}, Int64})
#=   24.1 ms =# precompile(Tuple{Type{Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}}, Array{Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, 1}, Array{Float64, 1}, Bool, Grumps.GrumpsNoSemaphores})
#=    8.5 ms =# precompile(Tuple{Type{NLSolversBase.InplaceObjective{DF, FDF, FGH, Hv, FGHv} where FGHv where Hv where FGH where FDF where DF}, Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMixedLogitEstimator}, Nothing, Nothing})
#=  269.5 ms =# precompile(Tuple{typeof(Optim.optimize), NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMixedLogitEstimator}, Nothing, Nothing}, Array{Float64, 1}, Optim.NewtonTrustRegion{Float64}, Optim.Options{Float64, Grumps.var"#177#178"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Array{Int64, 1}, Array{Float64, 1}, Grumps.GrumpsSolution{Float64}, Grumps.GrumpsMixedLogitEstimator}}})
#=  205.1 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMixedLogitEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=   48.8 ms =# precompile(Tuple{Base.Threads.var"#threading_run##0#threading_run##1"{Grumps.var"#ObjectiveFunctionθ!##18#ObjectiveFunctionθ!##19"{Grumps.var"#ObjectiveFunctionθ!##20#ObjectiveFunctionθ!##21"{Grumps.GrumpsFGH{Float64}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Base.Threads.Atomic{Int64}, Base.Semaphore, Bool, Bool, Array{Float64, 1}, Base.UnitRange{Int64}}}, Int64}})
#=   37.6 ms =# precompile(Tuple{typeof(Grumps.ObjectiveFunctionθ1!), Grumps.GrumpsMarketFGH{Float64}, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Bool, Bool, Bool, Int64})
#=   20.1 ms =# precompile(Tuple{typeof(Grumps.FillZXθ!), Base.Val{:Grumps}, Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMicroSpace{Float64}})
#=  173.0 ms =# precompile(Tuple{typeof(Grumps.grumpsδ!), Grumps.GrumpsSingleFGH{Float64}, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Int64})
#=    5.2 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##18#TwiceDifferentiable##19"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 2}, Array{Float64, 1}})
#=    5.9 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=    5.9 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#grumpsδ!##0#grumpsδ!##1"{Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Int64}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   14.5 ms =# precompile(Tuple{typeof(Grumps.OutsideObjective1!), Grumps.GrumpsSingleFGH{Float64}, Array{Float64, 1}, Array{Float64, 1}, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsMarketData{Float64, Grumps.GrumpsMicroDataHog{Float64}, Grumps.GrumpsMacroNoData{Float64}}, Grumps.GrumpsOptimizationOptions, Grumps.GrumpsMarketSpace{Float64, Grumps.GrumpsMicroSpace{Float64}, Grumps.GrumpsMacroNoSpace{Float64}}, Int64, Bool, Bool, Bool})
#=   99.1 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##16#TwiceDifferentiable##17"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMixedLogitEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 1}, Array{Float64, 1}})
#=  165.8 ms =# precompile(Tuple{NLSolversBase.var"#TwiceDifferentiable##22#TwiceDifferentiable##23"{NLSolversBase.InplaceObjective{Nothing, Nothing, Grumps.var"#175#176"{Grumps.GrumpsData{Float64}, Grumps.GrumpsOptimizationOptions, Bool, Array{Float64, 1}, Array{Array{Float64, 1}, 1}, Array{Array{Float64, 1}, 1}, Grumps.GrumpsSpace{Float64, Grumps.GrumpsNoSemaphores}, Grumps.GrumpsFGH{Float64}, Grumps.GrumpsMixedLogitEstimator}, Nothing, Nothing}, Float64}, Array{Float64, 2}, Array{Float64, 1}})
#=   71.8 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsMixedLogitEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.2 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsMixedLogitEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.0 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMixedLogitEstimator, Base.Val{:θ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    6.2 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##12#VarEst##13"{Grumps.GrumpsMixedLogitEstimator, Int64, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=   16.3 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsMixedLogitEstimator, Base.Val{:θ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    3.3 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMixedLogitEstimator, Base.Val{:δ}, Base.Val{:θ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    3.5 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMixedLogitEstimator, Base.Val{:θ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    5.6 ms =# precompile(Tuple{typeof(Grumps.Meat), Grumps.GrumpsMixedLogitEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   66.9 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsMixedLogitEstimator, Base.Val{:β}, Base.Val{:β}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    2.8 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##0#VarEst##1"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   11.3 ms =# precompile(Tuple{typeof(Grumps.Bread), Grumps.GrumpsMixedLogitEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=    6.3 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##4#VarEst##5"{Int64, Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Int64})
#=   23.6 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#VarEst##2#VarEst##3"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}, Base.UnitRange{Int64}}}, Int64})
#=    6.0 ms =# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
#=   25.9 ms =# precompile(Tuple{typeof(Base.sum), Base.Generator{Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}}})
#=    2.7 ms =# precompile(Tuple{Base.MappingRF{Grumps.var"#VarEst##8#VarEst##9"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}, Array{Array{Float64, 2}, 1}}, Base.BottomRF{typeof(Base.add_sum)}}, Array{Float64, 2}, Tuple{Int64, Int64}})
#=    7.7 ms =# precompile(Tuple{typeof(Grumps.VarEst), Grumps.GrumpsMixedLogitEstimator, Base.Val{:δ}, Base.Val{:δ}, Int64, Int64, Grumps.GrumpsIngredients{Float64}})
#=   21.2 ms =# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, Grumps.var"#se##2#se##3"{Grumps.GrumpsMixedLogitEstimator, Grumps.GrumpsIngredients{Float64}}}, Int64})
#=   25.6 ms =# precompile(Tuple{typeof(Base._atexit), Int32}) # recompile
